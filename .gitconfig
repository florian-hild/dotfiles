[core]
    editor = vim
    # Linux
    autocrlf = input
    # Windows
    #autocrlf = true
    safecrlf = false
    whitespace = fix,trailing-space,-space-before-tab,tab-in-indent,cr-at-eol
    pager = less
[pull]
    ff = only
    rebase = merges
[merge]
    ff = false
[diff]
    compactionHeuristic = true
[color]
    ui = auto
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[alias]
    a = add -v
    b = branch -va
    bb = !git for-each-ref --color --sort=-committerdate --format=$'%(color:red)%(ahead-behind:HEAD)\t%(color:blue)%(refname:short)\t%(color:yellow)%(committerdate:relative)\t%(color:default)%(describe)' refs/heads/ | sed 's/ /\t/' | column --separator=$'\t' --table --table-columns='Ahead,Behind,Branch Name,Last Commit,Description'
    lg = log --all --color --graph --abbrev-commit --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=format:'%Y-%m-%d %H:%M'
    lgg = log  --all --color --graph --abbrev-commit --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=format:'%Y-%m-%d %H:%M' --name-status
    lgf = log --all --color --graph --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative -p
    st = status --short
    co = checkout
    pl = pull --rebase
    d = diff --staged
    f = fetch --all -Pp
    dh = diff HEAD
    pb = push -u origin HEAD
    w = worktree
    wl = worktree list
    wr = worktree remove
    staash = stash --all
[rerere]
	enabled = true
[init]
    defaultBranch = main
[credential "https://github.com"]
    helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
    helper = !/usr/bin/gh auth git-credential
[branch]
    sort = -committerdate
[commit]
	gpgSign = true
[gpg]
	program = gpg
[rebase]
	updateRefs = true
