FROM python:3.13-alpine

ARG ANSIBLE_VERSION=latest

ENV LANG=C.UTF-8

# Install system packages
RUN <<EOF
apk update
apk add --no-cache bash openssh-client git
python3 -m pip install --no-cache --upgrade pip
rm -rf /var/cache/apk/* /tmp/pip-reqs-* /home/root/.cache/pip/*
EOF

# Add user and group
RUN <<EOF
addgroup --system ansible
adduser --disabled-password --system --shell /bin/bash --uid 1000 \
        --home /home/ansible --ingroup ansible ansible
mkdir -p /home/ansible/.ssh /tmp/.ansible
chown ansible:ansible /home/ansible/.ssh /tmp/.ansible
EOF

# Switch to app user
USER ansible

# Install Ansible
# Set PATH to user bin used by pip
ENV PATH="/home/ansible/.local/bin:${PATH}"
RUN --mount=type=bind,source=requirements_ansible-${ANSIBLE_VERSION}_alpine.txt,target=/tmp/requirements.txt --mount=type=bind,source=requirements.yml,target=/tmp/requirements.yml <<EOF
python3 -m pip install --no-cache --user -r /tmp/requirements.txt
rm -rf /tmp/pip-reqs-* /home/ansible/.cache/pip/*
ansible-galaxy install -r tmp/requirements.yml
EOF

# Configure Ansible
ENV ANSIBLE_REMOTE_TEMP=/tmp/.ansible \
    ANSIBLE_HOME=/home/ansible/.ansible \
    ANSIBLE_CONFIG=/home/ansible/ansible/ansible.cfg \
    ANSIBLE_FORCE_COLOR=True \
    ANSIBLE_HOST_KEY_CHECKING=False

SHELL ["/bin/bash", "-c"]
WORKDIR /home/ansible/ansible
CMD ["ansible", "--version"]
